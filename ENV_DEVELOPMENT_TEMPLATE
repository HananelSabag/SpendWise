# ===================================
# SpendWise - Development Environment Template
# ===================================
# For interviewers and developers who want to run the project locally
# Copy this file to create your own .env files
# ===================================

# ===================================
# SERVER ENVIRONMENT (.env in server/ directory)
# ===================================

# Database Configuration
# Use your own PostgreSQL database or create a free Supabase account
DATABASE_URL=postgresql://username:password@localhost:5432/spendwise_dev

# JWT Secrets (Generate your own secure secrets)
# Use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=your-32-character-secret-key-here
JWT_REFRESH_SECRET=your-32-character-refresh-secret-here
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# Server Configuration
PORT=5000
NODE_ENV=development

# CORS Configuration
ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000
CLIENT_URL=http://localhost:5173

# Email Configuration (Optional - for testing email features)
# Create a Gmail app password: https://support.google.com/accounts/answer/185833
GMAIL_USER=your-email@gmail.com
GMAIL_APP_PASSWORD=your-16-character-app-password
EMAIL_FROM=SpendWise Dev <noreply@spendwise-dev.com>

# File Upload Configuration
MAX_FILE_SIZE=5242880
UPLOAD_PATH=./uploads

# Database Connection Pool
DB_MAX_CONNECTIONS=10
DB_MIN_CONNECTIONS=2
DB_CONNECTION_TIMEOUT=30000
DB_IDLE_TIMEOUT=30000

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Logging
LOG_LEVEL=info
LOG_MAX_SIZE=20m
LOG_MAX_FILES=14d

# ===================================
# CLIENT ENVIRONMENT (.env in client/ directory)
# ===================================

# API Configuration
VITE_API_URL=http://localhost:5000
VITE_CLIENT_URL=http://localhost:5173
VITE_ENVIRONMENT=development

# Debug Settings
VITE_DEBUG_MODE=true
VITE_REQUEST_TIMEOUT=10000
VITE_RETRY_ATTEMPTS=3

# Feature Flags
VITE_ENABLE_PWA=true
VITE_ENABLE_ANALYTICS=false

# Performance Settings
VITE_MAX_FILE_SIZE=5242880

# ===================================
# SETUP INSTRUCTIONS
# ===================================

# 1. Database Setup Options:

# Option A: Local PostgreSQL
# - Install PostgreSQL on your machine
# - Create a database named 'spendwise_dev'
# - Update DATABASE_URL with your credentials
# - Run migrations: cd server && npm run migrate

# Option B: Supabase (Recommended for quick setup)
# - Create free account at https://supabase.com
# - Create new project
# - Go to Settings > Database
# - Copy connection string to DATABASE_URL
# - Import the provided SQL schema

# 2. JWT Secrets:
# Generate secure secrets using:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# 3. Email (Optional):
# - Enable 2FA on your Gmail account
# - Generate app password: https://support.google.com/accounts/answer/185833
# - Use the 16-character app password (not your regular password)

# 4. File Structure:
# Create these .env files:
# - server/.env (copy server section above)
# - client/.env (copy client section above)

# ===================================
# QUICK START COMMANDS
# ===================================

# 1. Install dependencies:
# npm install
# cd client && npm install
# cd ../server && npm install

# 2. Setup environment files:
# cp ENV_DEVELOPMENT_TEMPLATE server/.env
# cp ENV_DEVELOPMENT_TEMPLATE client/.env
# (Edit the files with your actual values)

# 3. Start development servers:
# Terminal 1: cd server && npm run dev
# Terminal 2: cd client && npm run dev

# 4. Access the application:
# Frontend: http://localhost:5173
# Backend API: http://localhost:5000

# ===================================
# TROUBLESHOOTING
# ===================================

# Database Connection Issues:
# - Verify DATABASE_URL format
# - Check if PostgreSQL/Supabase is running
# - Ensure database exists and is accessible

# JWT Token Issues:
# - Ensure JWT_SECRET is at least 32 characters
# - Generate new secrets if needed

# CORS Issues:
# - Verify ALLOWED_ORIGINS includes your frontend URL
# - Check that CLIENT_URL matches your frontend

# Email Issues (if testing email features):
# - Verify Gmail 2FA is enabled
# - Use app password, not regular password
# - Check Gmail SMTP settings

# ===================================
# NOTES FOR INTERVIEWERS
# ===================================

# This is a portfolio project demonstrating:
# - Full-stack development skills
# - Modern React with Vite
# - Node.js/Express API design
# - PostgreSQL database integration
# - JWT authentication
# - Security best practices
# - Production-ready code structure

# The actual production environment uses different
# credentials and configurations for security reasons.

# Feel free to explore the codebase and run the project
# locally to see the implementation in action!
# =================================== 